"" .ideavimrc - Matt Chapman
set easymotion
set multiple-cursors
set commentary
set ReplaceWithRegister
set argtextobj
set exchange
set textobj-entire
set highlightedyank
set vim-paragraph-motion
Plug 'michaeljsmith/vim-indent-object'

packadd matchit
set quickscope
set which-key
set NERDTree

set clipboard^=unnamedplus,unnamed
set number relativenumber
set number
set history=1000

" 'Fighting Kirby' regex. Capture the current word so it can be used in back references
" E.g. :%s/\".*\"/[\1](https://google.co.uk?q=\1)
cnoremap <F2> \(.*\)

" Not sure if shift+backspace is correct in NORMAL
nnoremap <S-Backspace> B

""" IdeaVim options
" Smart join for <C-J>
set ideajoin

" Map vim marks to IDEA global marks
set ideamarks

nmap <leader>h <Action>(HighlightUsagesInFile)
nmap <leader>n <Action>(ReSharperNavigateTo)
nmap <leader>p <Action>(ParameterInfo)
nmap <leader>r <Action>(Refactorings.QuickListPopupAction)
xmap <leader>r <Action>(Refactorings.QuickListPopupAction)
nmap <leader>s <Action>(ShowUsages)
nmap <leader>t <Action>(TypeHierarchy)
nmap <leader>u <Action>(FindUsages)
nmap <leader>v <Action>(Vcs.QuickListPopupAction)
nmap <C-k> <Action>(MoveLineUp)
nmap <C-j> <Action>(MoveLineDown)
xmap <C-j> <Action>(MoveLineDown)
xmap <C-k> <Action>(MoveLineUp)

"Mobile specialization
vmap <C-j> <C-e>
vmap <C-k> <C-y>
vmap <C-h> 10zh
vmap <C-l> 10zl
imap <C-j> <Down>
imap <C-k> <Up>
imap <C-h> <Left>
imap <C-l> <Right>
imap <C-i> <CR>

""""""""""""""""""""""""""""""""""""""Utilities""""""""""""""""""""""""""""""""

noremap <Space>sw :action SurroundWith<CR>
noremap <Space>= :action ReformatCode<CR>
noremap <Space>sm :action ShowPopupMenu<CR>
noremap <Space>st :action SaveAsTemplate<CR>
noremap <Space>cap   :action CopyAbsolutePath<CR>
noremap <Space>ccp   :action CopyContentRootPath<CR>
noremap <Space>oi :action OptimizeImports<CR>
nnoremap <Space>cv :action ChangeView<CR>
noremap <Space>co :action CloseAllEditorsButActive<CR>
noremap <Space>ag :action antlr.Generate<CR>:action antlr.Generate<CR>
noremap <Space>bc   :action ByteCodeViewer<CR>
noremap <Space>qq   :action $TranslateTextComponent<CR>
noremap <Space>tr :action $TranslateAndReplaceAction<CR>
noremap <Space>gfu :action GenerateFullRestUrl<CR>
noremap <Space>atf :action AddToFavorites<CR>
noremap <Space>cE :action CopyElement<CR>
noremap <Space>nE :action NewElement<CR>
noremap <Space>dE :action SafeDelete<CR>
nnoremap <Space>cp :action CheckinProject<CR>
nnoremap <CR><CR> :action ShowIntentionActions<CR>
nnoremap <Space><CR> :action GotoNextError<CR>
noremap <Space>nc :action NewClass<CR>
noremap <Space>ps :action ShowProjectStructureSettings<CR>
noremap <Space>ri :action RevealIn<CR>
noremap <Space>ga :action Generate<CR>
noremap <Space>cu :action CloseAllUnmodifiedEditors<CR>
noremap <Space>oc :action OpenCodotaSearch<CR>
noremap <Space>AC :action ActivateCodotaToolWindow<CR>
"Codota activation window, Codota plug-in needs to be installed in advance
noremap <Space>cl :action CodotaLeanSearchCrossRefAction<CR>

""""""""""""""""""""""""""""""""""""""Refactoring""""""""""""""""""""""""""""""""""""""
noremap <Space>re :action RenameElement<CR>
noremap <Space>mv :action Move<CR>
noremap <Space>ms :action MakeStatic<CR>
noremap <Space>ci :action ConvertToInstanceMethod<CR>
noremap <Space>il :action Inline<CR>
noremap <Space>em :action ExtractMethod<CR>
noremap <Space>ei :action ExtractInterface<CR>
noremap <Space>ef :action EncapsulateFields<CR>
noremap <Space>rmo :action ReplaceMethodWithMethodObject<CR>
noremap <Space>iv :action IntroduceVariable<CR>
noremap <Space>ic :action IntroduceConstant<CR>
noremap <Space>ip :action IntroduceParameter<CR>
noremap <Space>if :action IntroduceField<CR>
noremap <Space>po :action IntroduceParameterObject<CR>
noremap <Space>pd :action MemberPushDown<CR>
noremap <Space>pu :action MembersPullUp<CR>
noremap <Space>RF :action RenameFile<CR>
noremap <Space>cs  :action ChangeSignature<CR>
noremap <Space>ai :action AnonymousToInner<CR>

""""""""""""""""""""""""""""""""""""""Jump articles""""""""""""""""""""""""""""""""""""""

noremap <Space>te :action SearchEverywhere<CR>
nnoremap <Space>ts mm`m:action GotoSymbol<CR>
noremap  <Space>tu  mm`m:action Toolkit.GotoService<CR>
nnoremap <Space>ta mm`m:action GotoAction<CR>

noremap <Space>tt mm`m:action GotoTest<CR>
noremap <Space>tc mm`m:action GotoClass<CR>
noremap <Space>tp mm`m:action FindInPath<CR>
noremap <Space>ne mm`m:action GotoNextError<CR>
noremap <Space>pe mm`m:action GotoPreviousError<CR>
noremap <Space>gs mm`m:action GotoSuperMethod<CR>
noremap <Space>gi mm`m:action GotoImplementation<CR>
noremap <Space>g, mm`m:action JumpToLastChange<CR>
noremap <Space>g; mm`m:action JumpToNextChange<CR>
noremap <Space>rf :action RecentFiles<CR>
noremap <Space>rF :action RecentChangedFiles<CR>
noremap <Space>nw :action NextProjectWindow<CR>
noremap <Space>pw :action PreviousProjectWindow<CR>

""""""""""""""""""""""""""""""""""""""SQL""""""""""""""""""""""""""""""""""""""

noremap <Space>sc :action Console.Transaction.Commit<CR>
noremap <Space>sr :action Console.Transaction.Rollback<CR>
noremap <Space>se :action Console.Jdbc.Execute<CR>
"Open the database log window, provided the MyBatis Log Plugin is installed
noremap <Space>AL :action TailMyBatisLog0<CR>:action ActivateMyBatisLogToolWindow<CR>

""""""""""""""""""""""""""""""""""""""Run""""""""""""""""""""""""""""""""""""""

nnoremap <Space>rc :action RunConfiguration<CR>
noremap <Space>rr :action Run<CR>
noremap <Space>rn :action RunClass<CR>
noremap <Space>dd :action Debug<CR>
noremap <Space>dn :action DebugClass<CR>
noremap <Space>cc :action Coverage<CR>
noremap <Space>cn :action RunCoverage<CR>
noremap <Space>sp   :action Stop<CR>

""""""""""""""""""""""""""""""""""""""Debug""""""""""""""""""""""""""""""""""""""

noremap <Space>bp :action ToggleLineBreakpoint<CR>
noremap <Space>qe :action QuickEvaluateExpression <CR>
noremap <Space>ee :action EvaluateExpression <CR>
noremap <Space>fr :action Debugger.ForceEarlyReturn<CR>
noremap <Space>daw :action Debugger.AddToWatch<CR>
noremap <Space>fc :action ForceRunToCursor<CR>
noremap <Space>hs :action Hotswap<CR>
noremap <Space>DD :action JRebel Debug<CR>
noremap <Space>rab :action Debugger.RemoveAllBreakpointsInFile<CR>
noremap <Space>raB :action Debugger.RemoveAllBreakpoints<CR>
noremap <Space>df :action Debugger.PopFrame<CR>
noremap <Space>pp :action ShowExecutionPoint<CR>
noremap <Space>ds :action StreamTracerAction<CR>
noremap <Space>mb :action XDebugger.MuteBreakpoints<CR>

""""""""""""""""""""""""""""""""""""""Window""""""""""""""""""""""""""""""""""""""

noremap <Space>AM  :action ActivateMavenToolWindow<CR>
noremap <Space>AD  :action ActivateDatabaseToolWindow<CR>
noremap <Space>AT   :action ActivateTODOToolWindow<CR>
noremap <Space>AF :action ActivateFavoritesToolWindow<CR>
noremap <Space>AP :action ActivateProjectToolWindow<CR>
noremap <Space>AG :action ActivateVersionControlToolWindow<CR>
noremap <Space>AS :action ActivateServicesToolWindow<CR>
noremap <Space>AB :action ViewBreakpoints<CR>
noremap <Space>AR :action ActivateRestServicesToolWindow<CR>
nnoremap <Space>wd :action ActivateDebugToolWindow<CR>
nnoremap <Space>wr :action ActivateRunToolWindow<CR>
nnoremap <Space>wh :action HideActiveWindow<CR>
nnoremap <Space>mm :action MaximizeToolWindow<CR>
noremap <Space>ha :action HideAllWindows<CR>
noremap <Space><Space> :action HideAllWindows<CR>
noremap <Space>si :action SelectInProjectView<CR>
noremap <Space>eb :action EditBreakpoint<CR>

""""""""""""""""""""""""""""""""""""""Information""""""""""""""""""""""""""""""""""""""

noremap <Space>ed :action ShowErrorDescription<CR>
noremap <Space>ti :action ExpressionTypeInfo<CR>
noremap <Space>pi :action ParameterInfo<CR>
noremap <Space>jd :action QuickJavaDoc<CR>
noremap <Space>fs mm`m:action FileStructurePopup<CR>
noremap <Space>sd  :action ShowUmlDiagram<CR>
noremap <Space>ch :action CallHierarchy<CR>
nnoremap <Space>fu :action FindUsages<CR>
nnoremap <Space>su :action ShowUsages<CR>
noremap <Space>mh :action MethodHierarchy<CR>
noremap <Space>ss  :action ShowSettings<CR>
noremap <Space>ps :action ShowProjectStructureSettings<CR>

""""""""""""""""""""""""""""""""""""""Project""""""""""""""""""""""""""""""""""""""

noremap <Space>cP :action CloseProject<CR>
noremap <Space>CP :action CloseProject<CR>
noremap <Space>oP :action OpenFile<CR>
noremap <Space>OP :action OpenFile<CR>
noremap <Space>nP :action NewProject<CR>
noremap <Space>NP :action NewProject<CR>

command Wrap action EditorToggleUseSoftWraps

" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors

nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. Ã±

nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences

" Requires IdeaVim-QuickScope plugin (port of quick-scope)
" Docs say to ensure that `set quickscope` is placed after `set sneak` (not sure why)
" Replaces f/F and t/T to show highlights

set quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

" Not from vim-gitgutter. ={motion} is for indenting. =c does nothing

nmap =c <Action>(VcsShowCurrentChangeMarker)

nmap ]e <Action>(GotoNextError)
nmap [e <Action>(GotoPreviousError)

" These don't work in Rider, annoyingly. Try HighlightUsagesInFile (see <leader>h below)

nmap ]q <Action>(GotoNextElementUnderCaretUsage)
nmap [q <Action>(GotoPrevElementUnderCaretUsage)

nmap gb <Action>(Back)
nmap gD <Action>(GotoTypeDeclaration)
nmap gf <Action>(Forward)
nmap gh <Action>(ShowHoverInfo)

" nmap gl <Action>(QuickJavaDoc)

nmap gL <Action>(QuickImplementations)

" nmap gy <Action>(ShowErrorDescription)


"" Base Settings
"" ========================================================

set scrolloff=10
set linenumber
set showmode
set showcmd

set smartcase
set incsearch
set hlsearch

set visualbell

" Use system clipboard
set clipboard+=unnamed

let mapleader = " "


"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
set sneak
set nerdtree

" Easymotion settings
set easymotion
set notimeout

" Which-key settings
set which-key
let g:WhichKey_FontSize = 10
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b8"
let g:WhichKey_SortOrder = "by_key_prefix_first"

let g:WhichKeyDesc_leader = "<leader> Leader key"

let g:WhichKeyDesc_leader = "<leader>x Open file explorer"

let g:WhichKeyDesc_easymotion = "<leader>j Jump with Easymotion"
let g:WhichKeyDesc_easymotion_prefix = "<leader><leader>"

let g:WhichKeyDesc_fold = "<leader>z Folding"
let g:WhichKeyDesc_fold_all = "<leader>zc Fold all regions"
let g:WhichKeyDesc_unfold_all = "<leader>zo Unfold all regions"

let g:WhichKeyDesc_window = "<leader>w Window splits"
let g:WhichKeyDesc_window_split_vertically = "<leader>wv Split vertically"
let g:WhichKeyDesc_window_split_horizontally = "<leader>wh Split horizontally"
let g:WhichKeyDesc_window_split_unsplit = "<leader>wu Unsplit"
let g:WhichKeyDesc_window_split_move_editor = "<leader>wm Move editor to opposite tab group"


let g:WhichKeyDesc_display = "<leader>d Display options"
let g:WhichKeyDesc_zen_mode = "<leader>dz Toggle Zen mode"
let g:WhichKeyDesc_df_mode = "<leader>dd Toggle Distraction-Free mode"
let g:WhichKeyDesc_fullscreen = "<leader>df Toggle full screen"

let g:WhichKeyDesc_action= "<leader>a Actions"
let g:WhichKeyDesc_action_context_menu = "<leader>am Open context menu"
let g:WhichKeyDesc_action_search = "<leader>as Open command modal"

let g:WhichKeyDesc_file_quickLook = "<leader><leader> Recent files"

let g:WhichKeyDesc_file_nav = "<leader>f File navigation"
let g:WhichKeyDesc_file_nav_goto_file = "<leader>ff Go to file"
let g:WhichKeyDesc_file_nav_goto_content = "<leader>fc Search for file content"
let g:WhichKeyDesc_file_nav_show_recent_files = "<leader>fr Show recent files"
let g:WhichKeyDesc_file_nav_show_recent_locations = "<leader>fl Show recent locations"

let g:WhichKeyDesc_close_tab = "<leader>q Close active tab"

let g:WhichKeyDesc_refactoring = "<leader>r Refactoring menu"
let g:WhichKeyDesc_refactoring_rename = "<leader>rn Rename element"
let g:WhichKeyDesc_refactoring_method = "<leader>rm Extract method"
let g:WhichKeyDesc_refactoring_variable = "<leader>rv Introduce variable"
let g:WhichKeyDesc_refactoring_field = "<leader>rf Introduce field"
let g:WhichKeyDesc_refactoring_signature = "<leader>rs Change signature"
let g:WhichKeyDesc_refactoring_all = "<leader>rr Open refactorings list"

let g:WhichKeyDesc_goto = "<leader>g Go to X"
let g:WhichKeyDesc_goto_declaration = "<leader>gd Go to Definition"
let g:WhichKeyDesc_goto_type_declaration = "<leader>gy Go to Type Definition"
let g:WhichKeyDesc_goto_implementation = "<leader>gi Go to Implementation"
let g:WhichKeyDesc_goto_usages = "<leader>gu Go to Usages"
let g:WhichKeyDesc_goto_test = "<leader>gt Go to Test"
let g:WhichKeyDesc_goto_back = "<leader>gb Go Back"
let g:WhichKeyDesc_goto_forward = "<leader>gf Go Forward"

let g:WhichKeyDesc_git = "<leader>g Git operations"
let g:WhichKeyDesc_git_commit = "<leader>gc Open Git commit dialog"
let g:WhichKeyDesc_git_status = "<leader>gs Open Git status dialog"
let g:WhichKeyDesc_git_branches = "<leader>gb Open Git branches list"

let g:WhichKeyDesc_errors = "<leader>e Error navigation"
let g:WhichKeyDesc_errors_next = "<leader>en Go to next error in solution"
let g:WhichKeyDesc_errors_prev = "<leader>ep Go to previous error in solution"


"" Key mappings
"" ========================================================

inoremap jk <Esc>

" Tab navigation
nnoremap <A-n> :tabnext<CR>
nnoremap <A-p> :tabprev<CR>

" Pane navigation
nnoremap <A-h> <C-w>h
nnoremap <A-l> <C-w>l
nnoremap <A-k> <C-w>k
nnoremap <A-j> <C-w>j

" Jump between methods
nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" Execute macro saved in 'q' register
nnoremap qj @q

" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)


"" Leader commands
"" ========================================================

" Comment lines
map <leader>cC <action>(CommentByLineComment)

" Jump around with easymotion
map <leader>j <Plug>(easymotion-s)

" Open NERDTree (use q to exit)
map <leader>xo :NERDTreeToggle<CR>
map <leader>xt :NERDTree<CR>

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

" Display options
map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)

" Actions
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fc <action>(FindInPath)
map <leader><leader> <Action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)

" Close active tab
map <leader>q <action>(CloseContent)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gb <Action>(Forward)

" Git windows
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)

" Errors
map <leader>en <Action>(ReSharperGotoNextErrorInSolution)
map <leader>ep <Action>(ReSharperGotoPrevErrorInSolution)